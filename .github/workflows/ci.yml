name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  CACHE_KEY_PREFIX: deps-v1

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Install npm dependencies
        run: nix develop --command npm ci

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('package-lock.json') }}
          path: |
            node_modules

  browsers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-playwright-${{ env.CACHE_KEY_PREFIX }}
          path: |
            ~/.cache/ms-playwright

      - name: Install browsers
        run: nix develop --command npm run install-browsers

  check:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Restore node modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('package-lock.json') }}
          path: |
            node_modules

      - name: Check format
        run: nix develop --command npm run check:format

      # - name: Check types
      #   run: nix develop --command npm run check:types

      # - name: Lint check
      #   run: nix develop --command npm run check:lint

  test:
    needs: [setup, browsers]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Restore cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('package-lock.json') }}
          path: |
            node_modules

      - name: Build
        run: nix develop --command npm run test:unit

  build:
    needs: [check, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Restore cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('package-lock.json') }}
          path: |
            node_modules

      - name: Build
        run: nix develop --command npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: build
          path: build/
          if-no-files-found: error
          retention-days: 14

  analyze:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Restore cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('package-lock.json') }}
          path: |
            node_modules

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/

      - name: Analyze bundle size
        run: nix develop --command npx source-map-explorer build/**/*.js --html bundle-analysis.html

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-analysis.html

  performance:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/

      - name: Run Lighthouse CI
        run: nix develop --command npm run lighthouse

  e2e:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v20

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-node-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('package-lock.json') }}

      - name: Restore Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.CACHE_KEY_PREFIX }}

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/

      - name: Run E2E tests
        run: nix develop --command npm run test:e2e
