name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  CACHE_KEY_PREFIX: deps-v1
  BUN_VERSION_FILE: ".bun-version"
  NODE_VERSION_FILE: ".node-version"
  PLAYWRIGHT_CACHE_PATH: "~/.cache/ms-playwright"
  BUILD_ARTIFACTS_NAME: "build-output"
  BUILD_ARTIFACTS_DIR_NAME: ".output"
  BUILD_ARTIFACTS: |
    .output/public/**
    .output/server/**
    .output/_headers
    .output/nitro.json
    .output/package.json
    .output/package-lock.json

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Cache node_modules
        uses: actions/cache@v4
        id: bun-cache
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

  install-browsers:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          key: ${{ runner.os }}-browsers-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('bun.lock') }}
          path: ${{ env.PLAYWRIGHT_CACHE_PATH }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: bun run install-browsers -- --with-deps

  check:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Check format
        run: bun run check:format

      - name: Check types
        run: bun run check:types

      - name: Check types
        run: bun run check:lint

  test:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Run unit tests
        run: npm run test:unit

  build:
    needs: [install-dependencies, check, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Build
        run: bun run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: ${{ env.BUILD_ARTIFACTS_NAME }}
          path: ${{ env.BUILD_ARTIFACTS }}
          if-no-files-found: error
          retention-days: 14

  e2e:
    needs: [install-dependencies, install-browsers, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Restore browsers
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-browsers-${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('bun.lock') }}
          path: ${{ env.PLAYWRIGHT_CACHE_PATH }}

      - name: Restore build
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACTS_NAME }}
          path: ${{ env.BUILD_ARTIFACTS_DIR_NAME }}

      - name: Run E2E tests
        run: DEBUG=pw:webserver bun run test:e2e

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: failure() || cancelled()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    needs: [build, e2e]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ${{ env.BUN_VERSION_FILE }}

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
          path: node_modules

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACTS_NAME }}
          path: ${{ env.BUILD_ARTIFACTS_DIR_NAME }}

      - name: Generate Deployment ID
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "DEPLOYMENT_ID=main-$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
            echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
            echo "DEPLOY_NAME=sudoku" >> $GITHUB_ENV
          else
            echo "DEPLOYMENT_ID=staging-pr-${{ github.event.pull_request.number || github.run_number }}-$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
            echo "DEPLOY_NAME=sudoku-staging-pr-${{ github.event.pull_request.number || github.run_number }}" >> $GITHUB_ENV
          fi

      - name: Deploy
        run: bun wrangler deploy --env $DEPLOY_ENV --name $DEPLOY_NAME --var DEPLOYMENT_ID:$DEPLOYMENT_ID
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
