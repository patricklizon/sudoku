name: "Setup environment"
description: "Setup Bun and restore dependencies"
inputs:
  runtime:
    description: "Define runtime, either 'node' or 'bun'"
    default: bun
    required: false
  bun-version-file:
    description: "Path to bun version file"
    required: false
    default: ".bun-version"
  node-version-file:
    description: "Path to bun version file"
    required: false
    default: ".node-version"

outputs:
  cache-hit:
    description: "Whether cache was hit"
    value: ${{ steps.cache.outputs.cache-hit }}
runs:
  using: "composite"
  steps:
    - name: Setup Node runtime
      if: inputs.runtime == 'node'
      uses: actions/setup-node@v4
      with:
        node-version-file: ${{ inputs.node-version-file }}

    - name: Setup Bun runtime
      if: inputs.runtime == 'bun'
      uses: oven-sh/setup-bun@v2
      with:
        bun-version-file: ${{ inputs.bun-version-file }}

    - name: Cache node_modules
      uses: actions/cache@v4
      id: cache
      with:
        key: ${{ runner.os }}-node-modules-${{ hashFiles('bun.lock') }}
        path: node_modules

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        if [ "${{ inputs.runtime }}" == "node" ]; then
        npm ci
        else
        bun install --frozen-lockfile
        fi
